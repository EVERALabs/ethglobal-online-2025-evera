// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  admin
  user
}

model User {
  id String @id @default(nanoid(length: 16))

  // Email is now optional and unique if provided.
  // A user might sign in with only a wallet initially.
  email String? @unique

  // Password is now optional, as OAuth/SIWE/Privy don't use it.
  // password String?

  // --- New Fields for Enhanced Auth ---
  // For Sign-in with Ethereum (SIWE)
  walletAddress String @unique
  lastNonce     String

  // For Sign-in with Google (OAuth)
  // googleId String? @unique

  // For Sign-in with Privy
  // privyDid String? @unique
  // ------------------------------------

  role                     UserRole
  name                     String?
  avatarUrl                String? // To store profile picture from Google/Privy
  lastLogin                DateTime?
  createdAt                DateTime                   @default(now())
  updatedAt                DateTime                   @updatedAt
  ReservedWalletUserAccess ReservedWalletUserAccess[]
  SimpleNote               SimpleNote[]

  @@map("user")
}

model ReservedWallet {
  publicKey                String                     @id
  privateKey               String
  tags                     String[]
  notes                    String
  ReservedWalletUserAccess ReservedWalletUserAccess[]
}

model ReservedWalletUserAccess {
  user                    User           @relation(fields: [userId], references: [id])
  userId                  String
  reservedWallet          ReservedWallet @relation(fields: [reservedWalletPublicKey], references: [publicKey])
  reservedWalletPublicKey String
  createdAt               DateTime       @default(now())
  updatedAt               DateTime       @updatedAt
  active                  Boolean        @default(true)

  @@id([userId, reservedWalletPublicKey])
  @@map("reserved_wallet_user_access")
}

model SimpleNote {
  id        String   @id @default(nanoid(length: 16))
  title     String
  content   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  userId    String

  // make table name using snake_case
  @@map("simple_note")
}
